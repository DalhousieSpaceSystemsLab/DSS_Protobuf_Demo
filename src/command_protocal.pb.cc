// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command_protocal.proto

#include "command_protocal.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace command {
        template <typename>
PROTOBUF_CONSTEXPR Command::Command(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.cmd_)*/ 0u,
      /*decltype(_impl_.src_)*/ 0,
      /*decltype(_impl_.dst_)*/ 0,
      /*decltype(_impl_.dtt_)*/ 0u,
      /*decltype(_impl_.sig_)*/ 0u,
      /*decltype(_impl_.data_)*/ {},
      /*decltype(_impl_._oneof_case_)*/ {},
    } {}
struct CommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandDefaultTypeInternal() {}
  union {
    Command _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandDefaultTypeInternal _Command_default_instance_;
}  // namespace command
static ::_pb::Metadata file_level_metadata_command_5fprotocal_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_command_5fprotocal_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_command_5fprotocal_2eproto = nullptr;
const ::uint32_t TableStruct_command_5fprotocal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::command::Command, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_.cmd_),
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_.src_),
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_.dst_),
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_.dtt_),
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_.sig_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_.data_),
    0,
    1,
    2,
    3,
    4,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 18, -1, sizeof(::command::Command)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::command::_Command_default_instance_._instance,
};
const char descriptor_table_protodef_command_5fprotocal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026command_protocal.proto\022\007command\"\300\001\n\007Co"
    "mmand\022\013\n\003cmd\030\001 \002(\r\022\034\n\003src\030\002 \002(\0162\017.comman"
    "d.Device\022\034\n\003dst\030\003 \002(\0162\017.command.Device\022\013"
    "\n\003dtt\030\004 \002(\r\022\013\n\003sig\030\005 \002(\r\022\022\n\010string_d\030\006 \001"
    "(\tH\000\022\021\n\007bytes_d\030\007 \001(\014H\000\022\017\n\005int_d\030\010 \001(\003H\000"
    "\022\022\n\010double_d\030\t \001(\001H\000B\006\n\004data*`\n\006Device\022\007"
    "\n\003IPC\020\000\022\007\n\003ADC\020d\022\010\n\003CMM\020\310\001\022\010\n\003EPS\020\254\002\022\010\n\003"
    "OBM\020\220\003\022\010\n\003OBA\020\364\003\022\010\n\003PAY\020\330\004\022\010\n\003SFT\020\274\005\022\010\n\003"
    "THM\020\240\006B\002H\002"
};
static ::absl::once_flag descriptor_table_command_5fprotocal_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_command_5fprotocal_2eproto = {
    false,
    false,
    330,
    descriptor_table_protodef_command_5fprotocal_2eproto,
    "command_protocal.proto",
    &descriptor_table_command_5fprotocal_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_command_5fprotocal_2eproto::offsets,
    file_level_metadata_command_5fprotocal_2eproto,
    file_level_enum_descriptors_command_5fprotocal_2eproto,
    file_level_service_descriptors_command_5fprotocal_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_command_5fprotocal_2eproto_getter() {
  return &descriptor_table_command_5fprotocal_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_command_5fprotocal_2eproto(&descriptor_table_command_5fprotocal_2eproto);
namespace command {
const ::google::protobuf::EnumDescriptor* Device_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_command_5fprotocal_2eproto);
  return file_level_enum_descriptors_command_5fprotocal_2eproto[0];
}
bool Device_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 200:
    case 300:
    case 400:
    case 500:
    case 600:
    case 700:
    case 800:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class Command::_Internal {
 public:
  using HasBits = decltype(std::declval<Command>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Command, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::command::Command, _impl_._oneof_case_);
  static void set_has_cmd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_src(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_dst(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_dtt(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sig(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

Command::Command(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:command.Command)
}
Command::Command(const Command& from) : ::google::protobuf::Message() {
  Command* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cmd_){},
      decltype(_impl_.src_){},
      decltype(_impl_.dst_){},
      decltype(_impl_.dtt_){},
      decltype(_impl_.sig_){},
      decltype(_impl_.data_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.cmd_, &from._impl_.cmd_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sig_) -
    reinterpret_cast<char*>(&_impl_.cmd_)) + sizeof(_impl_.sig_));
  clear_has_data();
  switch (from.data_case()) {
    case kStringD: {
      _this->_internal_set_string_d(from._internal_string_d());
      break;
    }
    case kBytesD: {
      _this->_internal_set_bytes_d(from._internal_bytes_d());
      break;
    }
    case kIntD: {
      _this->_internal_set_int_d(from._internal_int_d());
      break;
    }
    case kDoubleD: {
      _this->_internal_set_double_d(from._internal_double_d());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }

  // @@protoc_insertion_point(copy_constructor:command.Command)
}
inline void Command::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.cmd_){0u},
      decltype(_impl_.src_){0},
      decltype(_impl_.dst_){0},
      decltype(_impl_.dtt_){0u},
      decltype(_impl_.sig_){0u},
      decltype(_impl_.data_){},
      /*decltype(_impl_._oneof_case_)*/ {},
  };
  clear_has_data();
}
Command::~Command() {
  // @@protoc_insertion_point(destructor:command.Command)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Command::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_data()) {
    clear_data();
  }
}
void Command::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Command::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:command.Command)
  switch (data_case()) {
    case kStringD: {
      _impl_.data_.string_d_.Destroy();
      break;
    }
    case kBytesD: {
      _impl_.data_.bytes_d_.Destroy();
      break;
    }
    case kIntD: {
      // No need to clear
      break;
    }
    case kDoubleD: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


void Command::InternalSwap(Command* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Command::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_command_5fprotocal_2eproto_getter, &descriptor_table_command_5fprotocal_2eproto_once,
      file_level_metadata_command_5fprotocal_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace command
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
